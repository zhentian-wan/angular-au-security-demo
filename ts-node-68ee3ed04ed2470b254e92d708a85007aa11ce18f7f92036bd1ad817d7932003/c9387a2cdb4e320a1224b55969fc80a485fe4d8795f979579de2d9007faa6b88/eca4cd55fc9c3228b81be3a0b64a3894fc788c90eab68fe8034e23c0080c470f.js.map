{"version":3,"file":"/Users/zhentianwan/Documents/Programming/Angular2/angular-security-course/server/password-validation.ts","sources":["/Users/zhentianwan/Documents/Programming/Angular2/angular-security-course/server/password-validation.ts"],"names":[],"mappings":";;AAAA,sDAAwD;AAExD,kBAAkB;AAClB,IAAM,MAAM,GAAG,IAAI,iBAAiB,EAAE,CAAC;AAEvC,uBAAuB;AACvB,MAAM;KACH,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAoC,mBAAmB;KAClE,GAAG,EAAE,CAAC,SAAS,EAAE,CAA8B,8BAA8B;KAC7E,GAAG,EAAE,CAAC,SAAS,EAAE,CAA8B,8BAA8B;KAC7E,GAAG,EAAE,CAAC,MAAM,EAAE,CAAiC,mBAAmB;KAClE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAA2B,yBAAyB;KACxE,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC,CAAC,CAAC,yBAAyB;AAE3E,0BAAiC,QAAgB;IAC/C,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC;AACjD,CAAC;AAFD,4CAEC","sourcesContent":["import * as passwordValidator from 'password-validator';\n\n// Create a schema\nconst schema = new passwordValidator();\n\n// Add properties to it\nschema\n  .is().min(7)                                    // Minimum length 7\n  .has().uppercase()                              // Must have uppercase letters\n  .has().lowercase()                              // Must have lowercase letters\n  .has().digits()                                 // Must have digits\n  .has().not().spaces()                           // Should not have spaces\n  .is().not().oneOf(['Passw0rd', 'Password123']); // Blacklist these values\n\nexport function validatePassword(password: string) {\n  return schema.validate(password, {list: true});\n}\n"]}